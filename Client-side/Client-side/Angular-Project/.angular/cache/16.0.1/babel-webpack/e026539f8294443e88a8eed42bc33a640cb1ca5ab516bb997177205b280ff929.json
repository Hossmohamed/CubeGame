{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass SliderDirective {\n  constructor(el) {\n    this.el = el;\n    this.src = this.el.nativeElement.src;\n    this.prev = document.getElementById('preview');\n    this.imageSlide = document.getElementsByTagName('img');\n    this.flag = 0;\n    this.play = setInterval(() => {\n      if (this.flag > 6) {\n        this.flag = 0;\n      }\n      this.prev.src = this.imageSlide[this.flag].src;\n      this.flag = this.flag + 1;\n      console.log(this.flag);\n    }, 500);\n  }\n  ImageChange() {\n    this.prev.src = this.src;\n    for (let i = 0; i < this.imageSlide.length; i++) {\n      this.imageSlide[i].classList.remove('active');\n      console.log(this.imageSlide[1]);\n      this.el.nativeElement.classList.add('active');\n    }\n  }\n}\nSliderDirective.ɵfac = function SliderDirective_Factory(t) {\n  return new (t || SliderDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nSliderDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: SliderDirective,\n  selectors: [[\"\", \"appSlider\", \"\"]],\n  hostBindings: function SliderDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function SliderDirective_click_HostBindingHandler() {\n        return ctx.ImageChange();\n      });\n    }\n  }\n});\nexport { SliderDirective };","map":{"version":3,"names":["SliderDirective","constructor","el","src","nativeElement","prev","document","getElementById","imageSlide","getElementsByTagName","flag","play","setInterval","console","log","ImageChange","i","length","classList","remove","add","i0","ɵɵdirectiveInject","ElementRef","selectors","hostBindings","SliderDirective_HostBindings","rf","ctx"],"sources":["C:\\Users\\hp\\Desktop\\.NET\\CubeGame\\Client-side\\Client-side\\Angular-Project\\src\\app\\Directives\\slider.directive.ts"],"sourcesContent":["import { Directive , HostListener , ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appSlider]'\n})\nexport class SliderDirective {\n\n  constructor(private el:ElementRef) { }\n\n\n    \n      src:any = this.el.nativeElement.src;\n      prev:any = document.getElementById('preview')\n      imageSlide = document.getElementsByTagName('img');\n      flag = 0;\n\n\n     play =  setInterval(()=>{\n        if (this.flag > 6) {\n          this.flag=0\n         } \n          this.prev.src = this.imageSlide[this.flag].src ;\n         this.flag = this.flag + 1 \n         \n         console.log(this.flag)\n  \n       },500)\n\n    @HostListener('click')\n     ImageChange() {\n     this.prev.src = this.src;\n     for (let i = 0 ; i< this.imageSlide.length ; i++ ){\n      this.imageSlide[i].classList.remove('active');\n      console.log(this.imageSlide[1])\n     \n     this.el.nativeElement.classList.add('active')\n   }\n   \n  \n  }\n\n\n\n}\n"],"mappings":";AAEA,MAGaA,eAAe;EAE1BC,YAAoBC,EAAa;IAAb,KAAAA,EAAE,GAAFA,EAAE;IAIlB,KAAAC,GAAG,GAAO,IAAI,CAACD,EAAE,CAACE,aAAa,CAACD,GAAG;IACnC,KAAAE,IAAI,GAAOC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;IAC7C,KAAAC,UAAU,GAAGF,QAAQ,CAACG,oBAAoB,CAAC,KAAK,CAAC;IACjD,KAAAC,IAAI,GAAG,CAAC;IAGT,KAAAC,IAAI,GAAIC,WAAW,CAAC,MAAI;MACrB,IAAI,IAAI,CAACF,IAAI,GAAG,CAAC,EAAE;QACjB,IAAI,CAACA,IAAI,GAAC,CAAC;;MAEX,IAAI,CAACL,IAAI,CAACF,GAAG,GAAG,IAAI,CAACK,UAAU,CAAC,IAAI,CAACE,IAAI,CAAC,CAACP,GAAG;MAC/C,IAAI,CAACO,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG,CAAC;MAEzBG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,IAAI,CAAC;IAExB,CAAC,EAAC,GAAG,CAAC;EAnB0B;EAsBlCK,WAAWA,CAAA;IACX,IAAI,CAACV,IAAI,CAACF,GAAG,GAAG,IAAI,CAACA,GAAG;IACxB,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAGA,CAAC,GAAE,IAAI,CAACR,UAAU,CAACS,MAAM,EAAGD,CAAC,EAAE,EAAE;MACjD,IAAI,CAACR,UAAU,CAACQ,CAAC,CAAC,CAACE,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;MAC7CN,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,UAAU,CAAC,CAAC,CAAC,CAAC;MAEhC,IAAI,CAACN,EAAE,CAACE,aAAa,CAACc,SAAS,CAACE,GAAG,CAAC,QAAQ,CAAC;;EAIhD;;AAlCWpB,eAAe,C;mBAAfA,eAAe,EAAAqB,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA;AAAA;AAAfvB,eAAe,C;QAAfA,eAAe;EAAAwB,SAAA;EAAAC,YAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;eAAfC,GAAA,CAAAb,WAAA,EAAa;MAAA;;;;SAAbf,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}